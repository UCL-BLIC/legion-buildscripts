#!/bin/bash -l

# ========================================================================
#  NAME: cytofpipe
# ========================================================================
#
# ========================================================================
# USAGE: cytofpipe INPUTDIR OUTPUTDIR MARKERSFILE <CONFIGFILE>
# ========================================================================



#$ -S /bin/bash
#$ -l h_rt=2:00:00
#$ -l mem=10G
#$ -l tmpfs=100G
#$ -cwd
#$ -N cytofpipe
#$ -jsv /shared/ucl/depts/cancer/apps/cytofpipe/dev/cytofpipe.jsv

set -o pipefail

module unload compilers
module unload mpi
module load r/recommended

configfile="${CYTOFPIPE_HOME}/default_config.txt"
gatingtemplate="${CYTOFPIPE_HOME}/gating_template_transform.csv"



inputfiles=$1
outputfiles=$2
markersfile=$3
if [ -n "$4" ]
  then
	configfile=${PWD}/$4
fi

## Sets the name of the output file for the times command
if [[ ! $SGE_TASK_ID ]]; then \
  TIMES_FILE=.times.$JOB_NAME.$JOB_ID
else
  TIMES_FILE=.times.$JOB_NAME.$JOB_ID.$SGE_TASK_ID
fi
 
## Required by function die
trap "exit 1" TERM
export TOP_PID=$$
 
function die {
  echo "******************************************************"
  echo "["`date`"] ERROR while running $1"
  echo "******************************************************"
  cat $TIMES_FILE
  rm $TIMES_FILE
  kill -s TERM $TOP_PID
}
 
function run {
  echo ""
  echo "======================================================"
  echo "["`date`"] Starting $1"
  echo " $*"
  echo "======================================================"

  cmd=""
  out=""
  mode="cmd"
  for arg in $*; do
    if [ $arg == ">" ]; then mode="out"; else
      if [ $mode == "cmd" ]; then cmd="$cmd $arg"; else out=$arg; fi
    fi
  done

  if [ $mode == "out" ]
  then
    if ! /usr/bin/time -va -o $TIMES_FILE \
      $cmd > $out
    then
      die $*
    fi
  else
    if ! /usr/bin/time  -va -o $TIMES_FILE \
      $*
    then
      die $*
    fi
  fi
}


echo "======================================================"
echo " HOST: "`hostname`
echo " TIME: "`date`
echo " ARGS: $*"
echo "======================================================"


run "mkdir -p $PWD/$outputfiles"

TEMPLATE=${gatingtemplate} CONFIG=${configfile} MARKERS=${PWD}/${markersfile} INPUT=${PWD}/${inputfiles} OUTPUT=${PWD}/${outputfiles} R CMD BATCH --no-save ${CYTOFPIPE_HOME}//cytofpipe.R ${PWD}/${outputfiles}/log_R.txt

run "rm ${PWD}/${outputfiles}/*cluster_median_heatmap.pdf ${PWD}/${outputfiles}/*cluster_median_data.csv"

for i in $PWD/$outputfiles/*Rphenograph*; do
  if [ -f "$i" ]; 
	then 
		run "mkdir -p $PWD/$outputfiles/Rphenograph";
		run "mv $PWD/$outputfiles/*Rphenograph*pdf $PWD/$outputfiles/Rphenograph/.";
		run "mv $PWD/$outputfiles/*Rphenograph*csv $PWD/$outputfiles/Rphenograph/.";
		break;
 fi
done

for i in $PWD/$outputfiles/*FlowSOM*; do
  if [ -f "$i" ]; 
	then 
		run "mkdir -p $PWD/$outputfiles/FlowSOM";
		run "mv $PWD/$outputfiles/*FlowSOM*pdf $PWD/$outputfiles/FlowSOM/.";
		run "mv $PWD/$outputfiles/*FlowSOM*csv $PWD/$outputfiles/FlowSOM/.";
		break;
 fi
done

for i in $PWD/$outputfiles/*DensVM*; do
  if [ -f "$i" ]; 
	then 
		run "mkdir -p $PWD/$outputfiles/DensVM";
		run "mv $PWD/$outputfiles/*DensVM*pdf $PWD/$outputfiles/DensVM/.";
		run "mv $PWD/$outputfiles/*DensVM*csv $PWD/$outputfiles/DensVM/.";
		break;
 fi
done

for i in $PWD/$outputfiles/*ClusterX*; do
  if [ -f "$i" ]; 
	then 
		run "mkdir -p $PWD/$outputfiles/ClusterX";
		run "mv $PWD/$outputfiles/*ClusterX*pdf $PWD/$outputfiles/ClusterX/.";
		run "mv $PWD/$outputfiles/*ClusterX*csv $PWD/$outputfiles/ClusterX/.";
		break;
 fi
done

for i in $PWD/$outputfiles/gating*; do
  if [ -f "$i" ]; 
	then 
		run "mkdir -p $PWD/$outputfiles/Gating";
		run "mv $PWD/$outputfiles/gating* $PWD/$outputfiles/Gating/.";
		break;
 fi
done

for i in $PWD/$outputfiles/gating*; do
   if [ -f "$i" ]; 
 	then 
 		run "mkdir -p $PWD/$outputfiles/Gating";
 		run "mv $PWD/$outputfiles/gating* $PWD/$outputfiles/Gating/.";
 		break;
  fi
done

if [ -e "$PWD/Rplots.pdf" ]
  then
      run "rm Rplots.pdf"
fi


 

echo
echo "======================================================"
echo "["`date`"] times:"
echo "======================================================"
cat $TIMES_FILE
rm $TIMES_FILE
echo "------------------------------------------------------"
echo
echo "======================================================"
echo "["`date`"] Done."
echo "======================================================"


